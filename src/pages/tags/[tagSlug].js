import React, { useEffect } from 'react';
import { useRouter } from 'next/router';
import { useSelector, useDispatch } from 'react-redux';
import { fetchTagData } from '@/redux/actions/tagsActions';
import Header from '../components/Header';
import Footer from '../components/Footer';
import Head from "next/head";
import PostItem from '../components/PostItem';
import Breadcrumbs from '../components/Breadcrumbs';


function tagSlug() {
  const router = useRouter();
  const { tagSlug } = router.query;
  const dispatch = useDispatch();
  const { tagsData, loading, error } = useSelector((state) => state.tag);

  useEffect(() => {
    dispatch(fetchTagData(tagSlug));
  }, [dispatch, tagSlug]);

  console.log(tagSlug)

  const count = tagsData ? tagsData.tag_posts ? tagsData.tag_posts.length : 0 : ''

  const crumbs = [
    { name: 'Главная', path: '/' },
    { name: 'Теги', path: '/tags' },
    // { name: tagsData.name, path: null },
  ];

  function pluralize(count) {
    if (count % 10 === 1 && count % 100 !== 11) {
      return 'статья';
    } else if ([2, 3, 4].includes(count % 10) && ![12, 13, 14].includes(count % 100)) {
      return 'статьи';
    } else {
      return 'статей';
    }
  }
  const articlesNaming = pluralize(count)

//   if (!Array.isArray(tagsData)) {
//     return <div className='error-layer'>No tags found</div>;
//   }
  
  return (
    <>
	
    <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="preconnect" href="https://fonts.googleapis.com"/>
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
        <link href="https://fonts.googleapis.com/css2?family=Jost:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap" rel="stylesheet"/>
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main >
        <div className='tag-detail'>
            <Header/>
			{
				loading ? (
					<div>Loading...</div>
					  ) : error ? (
						<div>Error: {error.message}</div>
					  ) : !tagsData ? (
						<div>No categories found</div>
					  ) : (
					  <div className='tag-detail__content '>
							<div className='container-xl'>
								<div className='tag-detail__heading'>
									<div className='left'>
										<h1 className={'tag-detail__title ' + tagsData.slug}>{tagsData.name}</h1>
										<span className='count'>{count} &nbsp; <span className='dot'></span>{articlesNaming}</span>
										<div className='decoration-count'>{count}</div>
									</div>
									<div className='right'>
										<Breadcrumbs
										crumbs={crumbs}/>
										<p>{tagsData.description}</p>

									</div>
								</div>
							</div>
						</div>)
			}
            <div className='tag-detail__posts mb-5'>
                <div className='container-xl'>
                    <div className='row'>
                        {
                            loading ? (
                              <div>Loading...</div>
                                ) : error ? (
                                  <div>Error: {error.message}</div>
                                ) : !tagsData ? (
                                  <div>No categories found</div>
                                ) : (
                                tagsData.tag_posts && tagsData.tag_posts.map((item) => (
                                  <PostItem key={item.id}
                                  links={'/categories/' + item.category[0]?.slug + '/' + item.slug}
                                  subLinks={'/subcategories/' + item.subcategory[0]?.slug + '/' + item.slug}
                                  class='col-md-4 col-sm-6'
                                  date={item.formatted_added_time}
                                  content_1={item.content_1}
                                  image_1={item.image_1}
                                  content_2={item.content_2}
                                  image_2={item.image_2}
                                  content_3={item.content_3}
                                  image_3={item.image_3}
                                  slug={item.slug}
                                  category={item.category[0].title}
                                  category_id={item.category[0].id}
                                  title={item.title}
                                  tags={item.tags}
                                />
                                ))
                          	)
                        }
                    </div>
                </div>
            </div>
            <Footer/>
        </div>
      </main>
    </>
    
  )
}

export default tagSlug